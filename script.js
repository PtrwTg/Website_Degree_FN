// LIFF ID ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì (2008162847-jMMzgOn1)
const liffId = '2008162847-jMMzgOn1';
let myUserId = '';
let myName = ''; // ‡πÄ‡∏Å‡πá‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
let myPictureUrl = '';

// URL ‡∏Ç‡∏≠‡∏á Backend API ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
const apiBaseUrl = 'https://website-degree-bn.onrender.com';
//const apiBaseUrl = 'http://localhost:5000';

// ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
function updateStatus(elementId, message, color = 'black') {
    const element = document.getElementById(elementId);
    if (element) {
        element.textContent = message;
        element.style.color = color;
    }
}

// ===================================
// NEW: ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£ (Schedule)
// ===================================
function displaySchedule(dateValue) {
    const scheduleDisplay = document.getElementById('schedule-display');
    const arrivalTimeGroup = document.getElementById('arrival-time-group');
    let title = '';
    let content = '';

    if (dateValue === '3-oct') {
        title = 'üóìÔ∏è ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡∏ß‡∏±‡∏ô‡∏ã‡πâ‡∏≠‡∏° (3 ‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°) - ‡∏ì ‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢';
        content = `
            <p><span class="time-slot">07:00 - 10:45 ‡∏ô.</span> ‡∏ù‡∏∂‡∏Å‡∏ã‡πâ‡∏≠‡∏°‡∏¢‡πà‡∏≠‡∏¢/‡∏ñ‡πà‡∏≤‡∏¢‡∏£‡∏π‡∏õ</p>
            <p><span class="time-slot">11:30 - 13:30 ‡∏ô.</span> ‡∏ù‡∏∂‡∏Å‡∏ã‡πâ‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡∏ö‡∏±‡∏ï‡∏£‡∏ö‡∏ô‡πÄ‡∏ß‡∏ó‡∏µ</p>
            <p><span class="time-slot">14:00 - 20:00 ‡∏ô.</span> ‡∏ù‡∏∂‡∏Å‡∏ã‡πâ‡∏≠‡∏°‡πÉ‡∏´‡∏ç‡πà</p>
            <p style="margin-top:10px; font-weight:600; color:#c62828;">* ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡∏°‡∏≤‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ö‡πà‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏ô‡πÑ‡∏õ‡∏Ñ‡∏£‡∏±‡∏ö</p>
        `;
        scheduleDisplay.style.display = 'block';
        arrivalTimeGroup.style.display = 'block';
    } else if (dateValue === '7-oct') {
        title = 'üéì ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡∏ß‡∏±‡∏ô‡∏à‡∏£‡∏¥‡∏á (7 ‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°) - ‡∏ì ‡∏´‡∏≠‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°';
        content = `
            <p><span class="time-slot">08:00 - 11:00 ‡∏ô.</span> ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô/‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏´‡∏°‡∏π‡πà/‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ï‡∏±‡∏ß</p>
            <p><span class="time-slot">11:00 ‡∏ô. ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏ô‡πÑ‡∏õ</span> ‡∏û‡∏¥‡∏ò‡∏µ‡∏û‡∏£‡∏∞‡∏£‡∏≤‡∏ä‡∏ó‡∏≤‡∏ô‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡∏ö‡∏±‡∏ï‡∏£</p>
            <p style="margin-top:10px; font-weight:600; color:#c62828;">* ‡πÇ‡∏õ‡∏£‡∏î‡∏°‡∏≤‡∏ñ‡∏∂‡∏á‡∏Å‡πà‡∏≠‡∏ô 10:30 ‡∏ô. ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ñ‡πà‡∏≤‡∏¢‡∏£‡∏π‡∏õ‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏≠‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°</p>
        `;
        scheduleDisplay.style.display = 'block';
        arrivalTimeGroup.style.display = 'block';
    } else {
        scheduleDisplay.style.display = 'none';
        arrivalTimeGroup.style.display = 'none';
        document.getElementById('arrival_time').removeAttribute('required'); // ‡∏•‡∏ö required ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô
        return;
    }

    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î required ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô
    document.getElementById('arrival_time').setAttribute('required', 'required');

    scheduleDisplay.innerHTML = `
        <h3>${title}</h3>
        ${content}
    `;
}

// -----------------------------------
// Event Listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô
// -----------------------------------
document.getElementById('date').addEventListener('change', (event) => {
    displaySchedule(event.target.value);
});


// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å: ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô LIFF ‡πÅ‡∏•‡∏∞‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
async function initializeLiff() {
    try {
        console.log('Initializing LIFF with ID:', liffId);
        
        // 1. ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô LIFF
        await liff.init({ liffId: liffId });
        console.log('LIFF initialized successfully');

        // 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
        if (!liff.isLoggedIn()) {
            console.log('User not logged in, redirecting to login...');
            liff.login();
        } else {
            console.log('User is logged in, getting profile...');
            
            // 3. ‡∏î‡∏∂‡∏á Profile
            const profile = await liff.getProfile();
            myUserId = profile.userId;
            myName = profile.displayName;
            myPictureUrl = profile.pictureUrl;

            // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß
            document.getElementById('login-message').style.display = 'none';
            document.getElementById('user-info').style.display = 'block';
            document.getElementById('user-name').textContent = myName;

            // 4. ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÑ‡∏ß‡πâ
            loadMyGuests(myName);
            
            // 5. ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°
            document.getElementById('registration-form').addEventListener('submit', handleFormSubmit);
        }
    } catch (err) {
        console.error('LIFF Initialization failed:', err);
        updateStatus('login-message', `‚ùå ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ LIFF ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ${err.message}`, 'red');
    }
}

// ===================================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏° (Submit)
// ===================================
async function handleFormSubmit(event) {
    event.preventDefault();
    
    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏∏‡πà‡∏°
    const submitBtn = document.querySelector('.submit-btn');
    submitBtn.textContent = '‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å...';
    submitBtn.disabled = true;

    const form = event.target;
    const formData = new FormData(form);
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Payload
    const payload = {
        line_user_id: myUserId, // ‡πÉ‡∏ä‡πâ LINE User ID ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ô‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô
        host_name: myName, // ‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ LINE ‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô
        first_name: formData.get('first_name'),
        last_name: formData.get('last_name'),
        // REMOVED: ‡∏•‡∏ö dob ‡∏≠‡∏≠‡∏Å
        phone: formData.get('phone'),
        date: formData.get('date'),
        arrival_time: formData.get('arrival_time') // NEW: ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏°‡∏≤‡∏ñ‡∏∂‡∏á
    };

    console.log('Submitting Payload:', payload);

    try {
        const response = await fetch(`${apiBaseUrl}/api/guests`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(payload),
        });

        if (response.ok) {
            alert('‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß! ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏°‡∏≤‡πÄ‡∏à‡∏≠‡∏Å‡∏±‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö/‡∏Ñ‡∏∞ üòä');
            form.reset();
            displaySchedule(''); // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£
            loadMyGuests(myName); // ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡∏Å‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
        } else {
            const errorData = await response.json();
            alert(`‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${errorData.error || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'}`);
        }
    } catch (error) {
        console.error('Error submitting form:', error);
        alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
    } finally {
        submitBtn.textContent = '‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô (‡∏°‡∏≤‡πÄ‡∏à‡∏≠‡∏Å‡∏±‡∏ô‡∏ô‡∏∞!)';
        submitBtn.disabled = false;
    }
}

// ===================================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏Ç‡∏Å‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á
// ===================================
async function loadMyGuests(hostName) {
    try {
        const response = await fetch(`${apiBaseUrl}/api/guests/by-host/${hostName}`);
        const guests = await response.json();
        
        const guestListElement = document.getElementById('guestList');
        guestListElement.innerHTML = ''; // Clear current list

        if (guests.length === 0) {
            guestListElement.innerHTML = '<li class="guest-item" style="justify-content: center; font-style: italic; color:#777;">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏à‡∏≤‡∏Å‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö/‡∏Ñ‡πà‡∏∞</li>';
            return;
        }

        guests.forEach(guest => {
            const listItem = document.createElement('li');
            listItem.className = 'guest-item';
            // ‡∏õ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•: ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏°‡∏≤‡∏ñ‡∏∂‡∏á
            const dateText = guest.date === '3-oct' ? '‡∏ß‡∏±‡∏ô‡∏ã‡πâ‡∏≠‡∏° (3 ‡∏ï.‡∏Ñ.)' : '‡∏ß‡∏±‡∏ô‡∏à‡∏£‡∏¥‡∏á (7 ‡∏ï.‡∏Ñ.)';
            const arrivalTimeText = guest.arrival_time ? ` | ‚è±Ô∏è ${guest.arrival_time}` : ''; 
            
            listItem.innerHTML = `
                <span>
                    <strong>${guest.first_name} ${guest.last_name}</strong>
                    <small style="display: block; color: #8e24aa; font-weight: 600;">${dateText} ${arrivalTimeText}</small>
                    ${guest.phone ? `<small style="display: block; color: #666;">üìû ${guest.phone}</small>` : ''}
                </span>
                <button class="delete-btn" onclick="deleteGuest('${guest.id}', '${guest.first_name} ${guest.last_name}')">‡∏•‡∏ö</button>
            `;
            guestListElement.appendChild(listItem);
        });

    } catch (error) {
        console.error('Error fetching my guests:', error);
        document.getElementById('guestList').innerHTML = '<li class="guest-item" style="justify-content: center; color:red; font-style: italic;">‚ùå ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</li>';
    }
}

// ===================================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏Ç‡∏Å
// ===================================
async function deleteGuest(guestId, guestName) {
    if (!confirm(`‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö: ${guestName} ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£?`)) {
        return;
    }

    try {
        const response = await fetch(`${apiBaseUrl}/api/guests/${guestId}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json',
            }
        });

        if (response.ok) {
            alert(`${guestName} ‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß`);
            loadMyGuests(myName); // Reload the list
        } else {
            alert('‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
        }

    } catch (error) {
        console.error('Error deleting guest:', error);
        alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå');
    }
}


// ===================================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏Ç‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (All Guests)
// ===================================
async function viewAllGuests(dateValue) {
    const allGuestsListElement = document.getElementById('allGuestsList');
    const allGuestStatus = document.getElementById('all-guest-status');
    allGuestsListElement.innerHTML = ''; // Clear previous list
    allGuestStatus.textContent = '‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠...';

    try {
        const dateText = dateValue === '3-oct' ? '3 ‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏° (‡∏ß‡∏±‡∏ô‡∏ã‡πâ‡∏≠‡∏°)' : '7 ‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏° (‡∏ß‡∏±‡∏ô‡∏à‡∏£‡∏¥‡∏á)';
        const response = await fetch(`${apiBaseUrl}/api/guests/by-date/${dateValue}`);
        const guests = await response.json();

        allGuestStatus.textContent = `‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏±‡∏ô ${dateText}`;

        if (guests.length === 0) {
            allGuestsListElement.innerHTML = '<li class="guest-item" style="justify-content: center; font-style: italic; color:#777;">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ</li>';
            return;
        }

        guests.forEach(guest => {
            const listItem = document.createElement('li');
            listItem.className = 'guest-item';
            // ‡∏õ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•: ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏°‡∏≤‡∏ñ‡∏∂‡∏á
            const arrivalTimeText = guest.arrival_time ? ` | ‚è±Ô∏è ${guest.arrival_time}` : ''; 

            listItem.innerHTML = `
                <span>
                    <strong>${guest.first_name} ${guest.last_name}</strong>
                    <small style="display: block; color: #8e24aa; font-weight: 600;">(‡∏°‡∏≤‡∏Å‡∏±‡∏ö ${guest.host_name}) ${arrivalTimeText}</small>
                </span>
            `;
            allGuestsListElement.appendChild(listItem);
        });
    } catch (error) {
        console.error('Error fetching all guests:', error);
        allGuestStatus.textContent = '‚ùå ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏Ç‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à';
    }
}

// ‡∏£‡∏≠‡πÉ‡∏´‡πâ DOM ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏Å initializeLiff()
document.addEventListener('DOMContentLoaded', () => {
    console.log('Page loaded, initializing LIFF...');
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ LIFF SDK ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
    if (typeof liff !== 'undefined') {
        console.log('LIFF SDK found, initializing...');
        initializeLiff();
    } else {
        console.log('LIFF SDK not found, waiting...');
        // Mockup Logic ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÉ‡∏ô‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏õ‡∏Å‡∏ï‡∏¥
        document.getElementById('login-message').innerHTML = '<p>‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö LIFF SDK ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö</p>';
        myUserId = 'Umockup_line_id_12345';
        myName = 'Test User (Mock)';
        document.getElementById('user-info').style.display = 'block';
        document.getElementById('user-name').textContent = myName;
        document.getElementById('registration-form').addEventListener('submit', handleFormSubmit);
        loadMyGuests(myName); 
        document.getElementById('date').addEventListener('change', (event) => {
             displaySchedule(event.target.value);
        });
    }
});